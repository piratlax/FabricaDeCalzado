/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Produccion;

import Logica.conexion;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mao
 */
public class OrdenProduccion extends javax.swing.JFrame {

    conexion con = new conexion();
    Connection cn = con.conectar();

    public OrdenProduccion() {
        initComponents();
        this.setLocationRelativeTo(null);
        asignarAutocompletado();
        iniciar();
        tabla();
    }

    public void iniciar() {
        txt12.setEnabled(false);
        txt13.setEnabled(false);
        txt14.setEnabled(false);
        txt15.setEnabled(false);
        txt16.setEnabled(false);
        txt17.setEnabled(false);
        txtTotal.setEnabled(false);
        txtOrden.setEnabled(false);
        btnProgramar.setEnabled(false);

    }

    // iniciamos autocompletado de los 3 campos dobles
    public void asignarAutocompletado() {
        TextAutoCompleter textAutoCompleter = new TextAutoCompleter(txtArticulo);
        textAutoCompleter.setMode(0); // infijo
        textAutoCompleter.setCaseSensitive(false); //No sensible a may√∫sculas

        //iniciamos
        try {
            String sql = "SELECT * FROM calzado";
            Statement completar;
            completar = cn.createStatement();
            ResultSet rs = completar.executeQuery(sql);
            while (rs.next()) {
                textAutoCompleter.addItem(rs.getString("articulo"));

            }

        } catch (SQLException ex) {
            System.out.println("Sin poder ejecutar el query a la tabla1");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        imgCalzado = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt12 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnProgramar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txt13 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt14 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt15 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt16 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt17 = new javax.swing.JTextField();
        txtPlano = new javax.swing.JLabel();
        txtCalzado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtOrden = new javax.swing.JTextField();
        txtCombinacion = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaOrden = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtOrdenTabla = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtArticulo = new javax.swing.JTextField();
        fechaOrden = new com.toedter.calendar.JDateChooser();
        btnIntegrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Orden de Compra"));

        imgCalzado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Graficos/imgCalzadoProd.png"))); // NOI18N

        jLabel4.setText("Plano");

        jLabel5.setText("12");

        txt12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt12FocusLost(evt);
            }
        });

        jLabel10.setText("Total");

        btnProgramar.setText("Programar");
        btnProgramar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProgramarActionPerformed(evt);
            }
        });

        jLabel6.setText("13");

        txt13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt13FocusLost(evt);
            }
        });

        jLabel7.setText("14");
        jLabel7.setToolTipText("");

        txt14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt14FocusLost(evt);
            }
        });

        jLabel8.setText("15");

        txt15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt15FocusLost(evt);
            }
        });

        jLabel9.setText("16");

        txt16.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt16FocusLost(evt);
            }
        });

        jLabel11.setText("17");

        txt17.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt17FocusLost(evt);
            }
        });

        txtPlano.setText(" ");

        txtCalzado.setText(" ");

        jLabel2.setText("Orden");

        txtCombinacion.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(imgCalzado, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addComponent(txtCalzado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtPlano, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt13, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt15, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt16, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel11))
                            .addComponent(txt17, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnProgramar)))
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtCombinacion, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(txtPlano)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(imgCalzado, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCalzado)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProgramar)
                    .addComponent(jLabel10)
                    .addComponent(jLabel2)
                    .addComponent(txtOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(txtCombinacion)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Planeacion"));

        tablaOrden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Foto", "Modelo", "Comb.", "Plano"
            }
        ));
        jScrollPane1.setViewportView(tablaOrden);

        btnEditar.setText("Editar");

        btnBorrar.setText("Borrar");

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel3.setText("Orden");

        txtOrdenTabla.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrar)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtOrdenTabla)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnBorrar)
                    .addComponent(btnSalir)
                    .addComponent(jLabel3)
                    .addComponent(txtOrdenTabla))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Busqueda"));

        jLabel1.setText("Articulo");

        btnIntegrar.setText("Integrar");
        btnIntegrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIntegrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIntegrar))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fechaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fechaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIntegrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sumar() {
        txtTotal.setText("0");
        int v12 = 0;
        int v13 = 0;
        int v14 = 0;
        int v15 = 0;
        int v16 = 0;
        int v17 = 0;
        try {

            if (txt12.getText().length() > 0) {
                v12 = Integer.parseInt(txt12.getText());
            }

            if (txt13.getText().length() > 0) {
                v13 = Integer.parseInt(txt13.getText());
            }

            if (txt14.getText().length() > 0) {
                v14 = Integer.parseInt(txt14.getText());
            }

            if (txt15.getText().length() > 0) {
                v15 = Integer.parseInt(txt15.getText());
            }

            if (txt16.getText().length() > 0) {
                v16 = Integer.parseInt(txt16.getText());
            }

            if (txt17.getText().length() > 0) {
                v17 = Integer.parseInt(txt17.getText());
            }
            int total = v12 + v13 + v14 + v15 + v16 + v17;
            String resultado = String.valueOf(total);
            txtTotal.setText(resultado);
        } catch (Exception e) {
        }
    }
    private void btnIntegrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIntegrarActionPerformed
        try {
            if (txtArticulo.getText().length() > 0) {

                Boolean existe = false;
                //iniciamos
                try {
                    String sql = "SELECT * FROM calzado where articulo='" + txtArticulo.getText() + "'";
                    Statement verificar;
                    verificar = cn.createStatement();
                    ResultSet rs = verificar.executeQuery(sql);
                    while (rs.next()) {
                        existe = true;

                        //colocamos datos del calzado
                        txtCalzado.setText(rs.getString("modelo"));
                        txtCombinacion.setText(rs.getString("color"));

                        //colocamos la imagen
                        Blob blob = rs.getBlob("imagen");

                        int blobLength = (int) blob.length();

                        byte[] blobAsBytes = blob.getBytes(1, blobLength);
                        final BufferedImage bufferedImage = ImageIO.read(new ByteArrayInputStream(blobAsBytes));

                        ImageIcon icon = new ImageIcon(bufferedImage);
                        Image conversion = icon.getImage();
                        Image escala = conversion.getScaledInstance(100, 68, Image.SCALE_SMOOTH);
                        ImageIcon calzado = new ImageIcon(escala);
                        imgCalzado.setIcon(calzado);

                    }

                } catch (SQLException ex) {
                    System.out.println("Sin poder ejecutar el query a la tabla1");
                }
                if (existe == true) {

                    //pasamos la fecha seleccionada a el plano que usa la fabrica
                    int JCdia = 0;
                    int JCmes = 0;
                    int JCanio = 0;
                    try {
                        String formato = fechaOrden.getDateFormatString();
                        Date date = fechaOrden.getDate();
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy");
                        SimpleDateFormat sdfM = new SimpleDateFormat("MM");
                        SimpleDateFormat sdfD = new SimpleDateFormat("dd");
                        JCdia = Integer.parseInt(sdfD.format(date));
                        JCmes = Integer.parseInt(sdfM.format(date));
                        JCanio = Integer.parseInt(sdf.format(date));
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Selecciona una fecha", "Error..!!", JOptionPane.ERROR_MESSAGE);

                    }

                    Calendar calendar = Calendar.getInstance();
                    calendar.set(JCanio, JCmes - 1, JCdia);  // 2011-04-08
                    String Semana = null;
                    int semana = calendar.get(Calendar.WEEK_OF_YEAR);
                    int year = calendar.get(Calendar.YEAR);
                    int dia = calendar.get(Calendar.DAY_OF_WEEK) - 1;
                    if (semana < 10) {
                        Semana = "0" + String.valueOf(semana);
                    } else {
                        Semana = String.valueOf(semana);
                    }
                    String Year = String.valueOf(year);
                    String plano = Year.charAt(3) + Semana + String.valueOf(dia);
                    txtPlano.setText(plano);
                    txt12.setEnabled(true);
                    txt13.setEnabled(true);
                    txt14.setEnabled(true);
                    txt15.setEnabled(true);
                    txt16.setEnabled(true);
                    txt17.setEnabled(true);
                    txtOrden.setEnabled(true);
                    btnProgramar.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "no existe el articulo en la BD");
                }

            } else {
                JOptionPane.showMessageDialog(this, "te faltan datos");

            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnIntegrarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txt12FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt12FocusLost
        sumar();
    }//GEN-LAST:event_txt12FocusLost

    private void txt13FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt13FocusLost
        sumar();
    }//GEN-LAST:event_txt13FocusLost

    private void txt14FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt14FocusLost
        sumar();
    }//GEN-LAST:event_txt14FocusLost

    private void txt15FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt15FocusLost
        sumar();
    }//GEN-LAST:event_txt15FocusLost

    private void txt16FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt16FocusLost
        sumar();
    }//GEN-LAST:event_txt16FocusLost

    private void txt17FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt17FocusLost
        sumar();
    }//GEN-LAST:event_txt17FocusLost
    // Se crea el modelo para la tabla
    DefaultTableModel modelo;

    private void tabla() {
        //preparamos la tabla
        String[] cabecera = { "Modelo", "Combinacion", "Plano", "12", "13", "14", "15", "16", "17", "Pares"};
        // se definen los registros que llevara la tabla
        String[] registros = new String[10];
        // se hace el llamado sql de todas las ordenes de la compra
        
        String sql = "SELECT * FROM compra WHERE compra='" + txtOrdenTabla.getText() + "'";
        //establecemos los anchos en pixeles de las columnas
        int[] anchos = {50, 100, 50, 20, 20, 20, 20, 20, 20, 30};
        modelo = new DefaultTableModel(null, cabecera);
        ImageIcon calzado=null;
        try {
            Statement table;
            table = cn.createStatement();
            ResultSet rs = table.executeQuery(sql);
            while (rs.next()) {
                //codigo de la imagen aqui :)
               
            // Obtenemos la imagen
        
            try {
            String sqlImagen = "SELECT * FROM calzado where articulo='"+txtArticulo.getText()+"'";
            Statement verificar;
            verificar = cn.createStatement();
            ResultSet rsImagen = verificar.executeQuery(sqlImagen);
            while (rsImagen.next()) {
            
            //colocamos la imagen
            Blob blob = rs.getBlob("imagen");

                int blobLength = (int) blob.length();

                byte[] blobAsBytes = blob.getBytes(1, blobLength);
                final BufferedImage bufferedImage = ImageIO.read(new ByteArrayInputStream(blobAsBytes));
                
                
            ImageIcon icon = new ImageIcon(bufferedImage);
            Image conversion = icon.getImage();
            Image escala = conversion.getScaledInstance(100, 68, Image.SCALE_SMOOTH);
            calzado = new ImageIcon(escala);
            }
        } catch (SQLException ex) {
            System.out.println("Sin poder ejecutar el query a la tabla1");
        }  catch (IOException ex) {
               Logger.getLogger(OrdenProduccion.class.getName()).log(Level.SEVERE, null, ex);
           }
                
                registros[0] = rs.getString("modelo");
                registros[1] = rs.getString("combinacion");
                registros[2] = rs.getString("plano");
                registros[3] = rs.getString("n12");
                registros[4] = rs.getString("n13");
                registros[5] = rs.getString("n14");
                registros[6] = rs.getString("n15");
                registros[7] = rs.getString("n16");
                registros[8] = rs.getString("n17");
                registros[9] = rs.getString("pares");
                modelo.addRow(registros);

            }
            tablaOrden.setModel(modelo);
            for (int i = 0; i < cabecera.length; i++) {
                tablaOrden.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                tablaOrden.setFont(new java.awt.Font("Tahoma", 0, 12));
            }
        } catch (SQLException ex) {
            System.out.println("Sin poder ejecutar el query a la tabla");
        }
    }
    private void btnProgramarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProgramarActionPerformed
        // integrar todo a la tabla 
        //primero verificamos campos no esten vacios

        if (txtOrden.getText().equals("") || txtTotal.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Te Faltan datos");
        } else {
            //pasamos la orden de compra al campo
            txtOrdenTabla.setText(txtOrden.getText());
            //asignamos valores
            String compra = txtOrden.getText();
            String modelo = txtCalzado.getText();
            String combinacion = txtCombinacion.getText();
            String plano = txtPlano.getText();
            int v12 = Integer.parseInt(txt12.getText());
            int v13 = Integer.parseInt(txt13.getText());
            int v14 = Integer.parseInt(txt14.getText());
            int v15 = Integer.parseInt(txt15.getText());
            int v16 = Integer.parseInt(txt16.getText());
            int v17 = Integer.parseInt(txt17.getText());
            int pares = Integer.parseInt(txtTotal.getText());
            java.sql.Date sqldate = new java.sql.Date(fechaOrden.getDate().getTime());

//integrar en la BD
            try {
                PreparedStatement pps = cn.prepareStatement("INSERT INTO compra (compra,modelo,combinacion,plano,n12,n13,n14,n15,n16,n17,pares,fecha) "
                        + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)");
                pps.setString(1, compra);
                pps.setString(2, modelo);
                pps.setString(3, combinacion);
                pps.setString(4, plano);
                pps.setInt(5, v12);
                pps.setInt(6, v13);
                pps.setInt(7, v14);
                pps.setInt(8, v15);
                pps.setInt(9, v16);
                pps.setInt(10, v17);
                pps.setInt(11, pares);
                pps.setDate(12, sqldate);
                pps.executeUpdate();

                // iniciamos la afectacion a la base de datos de inventario
                String articulo = txtArticulo.getText();
                String sqlInventario = "SELECT * from especificacion WHERE articulo='" + articulo + "'";
                Statement stInventario;
                stInventario = cn.createStatement();
                ResultSet rsInventario = stInventario.executeQuery(sqlInventario);
                while (rsInventario.next()) {
                    String codigo = rsInventario.getString("codigo");
                    Double consumo = rsInventario.getDouble("consumo");
                    Double prometido = consumo * pares;
                    //afectamos inventario
                    String actualizar = "update inventario set prometido_cantidad=?,prometido=? WHERE codigo='" + codigo + "'";

                    try {
                        PreparedStatement ps;
                        ps = cn.prepareStatement(actualizar);

                        ps.setDouble(1, prometido);
                        ps.setDate(2, sqldate);
                        ps.executeUpdate();
                        ps.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(OrdenProduccion.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "Hay un problema con la BD, el prometido no afectado inventario");
                    }
                }
                tabla();
                //se dejan en blanco los campos
                txtPlano.setText("");
                txtCalzado.setText("");
                txtCombinacion.setText("");
                txt12.setText("");
                txt13.setText("");
                txt14.setText("");
                txt15.setText("");
                txt16.setText("");
                txt17.setText("");
                txtArticulo.setText("");
                txtTotal.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(OrdenProduccion.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "error en la BD, no se ha integrado el registro", "error", 0);

            }

        }
    }//GEN-LAST:event_btnProgramarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdenProduccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdenProduccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdenProduccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdenProduccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrdenProduccion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnIntegrar;
    private javax.swing.JButton btnProgramar;
    private javax.swing.JButton btnSalir;
    private com.toedter.calendar.JDateChooser fechaOrden;
    private javax.swing.JLabel imgCalzado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaOrden;
    private javax.swing.JTextField txt12;
    private javax.swing.JTextField txt13;
    private javax.swing.JTextField txt14;
    private javax.swing.JTextField txt15;
    private javax.swing.JTextField txt16;
    private javax.swing.JTextField txt17;
    private javax.swing.JTextField txtArticulo;
    private javax.swing.JLabel txtCalzado;
    private javax.swing.JLabel txtCombinacion;
    private javax.swing.JTextField txtOrden;
    private javax.swing.JLabel txtOrdenTabla;
    private javax.swing.JLabel txtPlano;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
